class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
       
         int [] sorted = new int[nums1.length+nums2.length];       
        int i,j,c=0;
        for(i=0,j=0;i<nums1.length&&j<nums2.length;){
            if(nums1[i]<=nums2[j]){
                sorted[c]=nums1[i];
                i++;
                
            }
            else
            {
                sorted[c]=nums2[j];
                j++;
            }
            c++;
        }
        while(i<nums1.length){
            sorted[c]=nums1[i];
            i++;
            c++;
        }
         while(j<nums2.length){
            sorted[c]=nums2[j];
            j++;
            c++;
        }
        if(sorted.length==1){
            return (double) sorted[0];
        }
         int mid = (sorted.length)/2;
        if((sorted.length)%2!=0){
          
            return (double)sorted[mid];
        }
  
        return (double)(sorted[mid]  + sorted[mid-1])/2;
        

    }
}
